{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ajayp\\\\Downloads\\\\algebra-solver\\\\frontend\\\\src\\\\pages\\\\GraphPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport \"../styles/GraphPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nfunction GraphPage() {\n  _s();\n  const [equation, setEquation] = useState(\"x\");\n  const [graphData, setGraphData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleGraph = async () => {\n    if (!equation.trim()) {\n      setError(\"Please enter an equation\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setGraphData(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/graph`, {\n        equation\n      });\n      if (response.data.error) {\n        setError(response.data.error);\n      } else {\n        setGraphData(response.data);\n      }\n    } catch (err) {\n      setError(\"Failed to connect to server. Make sure backend is running on port 5000.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const examples = [\"x\", \"2*x + 3\", \"x^2\", \"sin(x)\", \"sqrt(x)\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Visualize equations and functions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter an equation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: equation,\n          onChange: e => setEquation(e.target.value),\n          placeholder: \"e.g., 2*x + 3\",\n          onKeyPress: e => e.key === \"Enter\" && handleGraph()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGraph,\n          disabled: loading,\n          className: \"graph-btn\",\n          children: loading ? \"Generating...\" : \"Generate Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Examples:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), examples.map((ex, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"example-btn\",\n            onClick: () => setEquation(ex),\n            children: ex\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), graphData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: graphData.data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"y\",\n              stroke: \"#667eea\",\n              dot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphPage, \"gtBmWOys4sohUD0ZD3fbpJAmIcU=\");\n_c = GraphPage;\nexport default GraphPage;\nvar _c;\n$RefreshReg$(_c, \"GraphPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","GraphPage","equation","setEquation","graphData","setGraphData","error","setError","loading","setLoading","handleGraph","trim","response","post","data","err","examples","className","children","fileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","disabled","map","ex","idx","width","height","strokeDasharray","dataKey","stroke","dot","_c","$RefreshReg$"],"sources":["C:/Users/ajayp/Downloads/algebra-solver/frontend/src/pages/GraphPage.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport axios from \"axios\"\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\"\nimport \"../styles/GraphPage.css\"\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\"\n\nfunction GraphPage() {\n  const [equation, setEquation] = useState(\"x\")\n  const [graphData, setGraphData] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const handleGraph = async () => {\n    if (!equation.trim()) {\n      setError(\"Please enter an equation\")\n      return\n    }\n\n    setLoading(true)\n    setError(\"\")\n    setGraphData(null)\n\n    try {\n      const response = await axios.post(`${API_URL}/api/graph`, { equation })\n      if (response.data.error) {\n        setError(response.data.error)\n      } else {\n        setGraphData(response.data)\n      }\n    } catch (err) {\n      setError(\"Failed to connect to server. Make sure backend is running on port 5000.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const examples = [\"x\", \"2*x + 3\", \"x^2\", \"sin(x)\", \"sqrt(x)\"]\n\n  return (\n    <div className=\"graph-page\">\n      <h1>Graph Visualizer</h1>\n      <p className=\"subtitle\">Visualize equations and functions</p>\n\n      <div className=\"graph-container\">\n        <div className=\"input-section\">\n          <label>Enter an equation:</label>\n          <input\n            type=\"text\"\n            value={equation}\n            onChange={(e) => setEquation(e.target.value)}\n            placeholder=\"e.g., 2*x + 3\"\n            onKeyPress={(e) => e.key === \"Enter\" && handleGraph()}\n          />\n          <button onClick={handleGraph} disabled={loading} className=\"graph-btn\">\n            {loading ? \"Generating...\" : \"Generate Graph\"}\n          </button>\n\n          <div className=\"examples\">\n            <p>Examples:</p>\n            {examples.map((ex, idx) => (\n              <button key={idx} className=\"example-btn\" onClick={() => setEquation(ex)}>\n                {ex}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {graphData && (\n          <div className=\"graph-section\">\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <LineChart data={graphData.data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"x\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"y\" stroke=\"#667eea\" dot={false} />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default GraphPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}