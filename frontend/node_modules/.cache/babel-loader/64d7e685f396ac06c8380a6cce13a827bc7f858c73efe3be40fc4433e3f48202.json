{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ajayp\\\\Downloads\\\\algebra-solver\\\\frontend\\\\src\\\\pages\\\\SolverPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/SolverPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nfunction SolverPage() {\n  _s();\n  const [equation, setEquation] = useState(\"\");\n  const [solution, setSolution] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSolve = async () => {\n    if (!equation.trim()) {\n      setError(\"Please enter an equation\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setSolution(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/solve`, {\n        equation\n      });\n      if (response.data.error) {\n        setError(response.data.error);\n      } else {\n        setSolution(response.data);\n      }\n    } catch (err) {\n      setError(\"Failed to connect to server. Make sure backend is running on port 5000.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const examples = [\"2x + 5 = 13\", \"3x - 7 = 2\", \"x + 10 = 25\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solver-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Equation Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Solve linear equations step by step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solver-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter an equation (e.g., 2x + 5 = 13):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: equation,\n          onChange: e => setEquation(e.target.value),\n          placeholder: \"e.g., 3x + 2 = 11\",\n          onKeyPress: e => e.key === \"Enter\" && handleSolve()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSolve,\n          disabled: loading,\n          className: \"solve-btn\",\n          children: loading ? \"Solving...\" : \"Solve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Examples:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), examples.map((ex, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"example-btn\",\n            onClick: () => setEquation(ex),\n            children: ex\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solution-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Solution: x = \", solution.solution]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), solution.steps.map((step, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"step-number\",\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"equation\",\n                children: step.equation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"description\",\n                children: step.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(SolverPage, \"UZMzIzjTCX10JoxeeQDnz782cP0=\");\n_c = SolverPage;\nexport default SolverPage;\nvar _c;\n$RefreshReg$(_c, \"SolverPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SolverPage","equation","setEquation","solution","setSolution","error","setError","loading","setLoading","handleSolve","trim","response","post","data","err","examples","className","children","fileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","disabled","map","ex","idx","steps","step","description","_c","$RefreshReg$"],"sources":["C:/Users/ajayp/Downloads/algebra-solver/frontend/src/pages/SolverPage.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport axios from \"axios\"\nimport \"../styles/SolverPage.css\"\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\"\n\nfunction SolverPage() {\n  const [equation, setEquation] = useState(\"\")\n  const [solution, setSolution] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const handleSolve = async () => {\n    if (!equation.trim()) {\n      setError(\"Please enter an equation\")\n      return\n    }\n\n    setLoading(true)\n    setError(\"\")\n    setSolution(null)\n\n    try {\n      const response = await axios.post(`${API_URL}/api/solve`, { equation })\n      if (response.data.error) {\n        setError(response.data.error)\n      } else {\n        setSolution(response.data)\n      }\n    } catch (err) {\n      setError(\"Failed to connect to server. Make sure backend is running on port 5000.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const examples = [\"2x + 5 = 13\", \"3x - 7 = 2\", \"x + 10 = 25\"]\n\n  return (\n    <div className=\"solver-page\">\n      <h1>Equation Solver</h1>\n      <p className=\"subtitle\">Solve linear equations step by step</p>\n\n      <div className=\"solver-container\">\n        <div className=\"input-section\">\n          <label>Enter an equation (e.g., 2x + 5 = 13):</label>\n          <input\n            type=\"text\"\n            value={equation}\n            onChange={(e) => setEquation(e.target.value)}\n            placeholder=\"e.g., 3x + 2 = 11\"\n            onKeyPress={(e) => e.key === \"Enter\" && handleSolve()}\n          />\n          <button onClick={handleSolve} disabled={loading} className=\"solve-btn\">\n            {loading ? \"Solving...\" : \"Solve\"}\n          </button>\n\n          <div className=\"examples\">\n            <p>Examples:</p>\n            {examples.map((ex, idx) => (\n              <button key={idx} className=\"example-btn\" onClick={() => setEquation(ex)}>\n                {ex}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {solution && (\n          <div className=\"solution-section\">\n            <h2>Solution: x = {solution.solution}</h2>\n            <div className=\"steps\">\n              <h3>Steps:</h3>\n              {solution.steps.map((step, idx) => (\n                <div key={idx} className=\"step\">\n                  <span className=\"step-number\">{idx + 1}</span>\n                  <div className=\"step-content\">\n                    <p className=\"equation\">{step.equation}</p>\n                    <p className=\"description\">{step.description}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default SolverPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}