{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ajayp\\\\Downloads\\\\algebra-solver\\\\frontend\\\\src\\\\pages\\\\SimplifierPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/SimplifierPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nfunction SimplifierPage() {\n  _s();\n  const [expression, setExpression] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSimplify = async () => {\n    if (!expression.trim()) {\n      setError(\"Please enter an expression\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setResult(null);\n    try {\n      const response = await axios.post(`${API_URL}/api/simplify`, {\n        expression\n      });\n      if (response.data.error) {\n        setError(response.data.error);\n      } else {\n        setResult(response.data);\n      }\n    } catch (err) {\n      setError(\"Failed to connect to server. Make sure backend is running on port 5000.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const examples = [\"2x + 3x\", \"5a + 2b - 3a + b\", \"4x + 2 - x + 5\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simplifier-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expression Simplifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Combine like terms and simplify expressions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simplifier-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter an expression:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: expression,\n          onChange: e => setExpression(e.target.value),\n          placeholder: \"e.g., 2x + 3x + 5\",\n          onKeyPress: e => e.key === \"Enter\" && handleSimplify()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSimplify,\n          disabled: loading,\n          className: \"simplify-btn\",\n          children: loading ? \"Simplifying...\" : \"Simplify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Examples:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), examples.map((ex, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"example-btn\",\n            onClick: () => setExpression(ex),\n            children: ex\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Original:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"expression\",\n            children: result.original\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Simplified:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"expression simplified\",\n            children: result.simplified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(SimplifierPage, \"YMotXalQi1X3VR5Bgf8ZL0CluHY=\");\n_c = SimplifierPage;\nexport default SimplifierPage;\nvar _c;\n$RefreshReg$(_c, \"SimplifierPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SimplifierPage","expression","setExpression","result","setResult","error","setError","loading","setLoading","handleSimplify","trim","response","post","data","err","examples","className","children","fileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","disabled","map","ex","idx","original","simplified","_c","$RefreshReg$"],"sources":["C:/Users/ajayp/Downloads/algebra-solver/frontend/src/pages/SimplifierPage.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport axios from \"axios\"\nimport \"../styles/SimplifierPage.css\"\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\"\n\nfunction SimplifierPage() {\n  const [expression, setExpression] = useState(\"\")\n  const [result, setResult] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const handleSimplify = async () => {\n    if (!expression.trim()) {\n      setError(\"Please enter an expression\")\n      return\n    }\n\n    setLoading(true)\n    setError(\"\")\n    setResult(null)\n\n    try {\n      const response = await axios.post(`${API_URL}/api/simplify`, { expression })\n      if (response.data.error) {\n        setError(response.data.error)\n      } else {\n        setResult(response.data)\n      }\n    } catch (err) {\n      setError(\"Failed to connect to server. Make sure backend is running on port 5000.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const examples = [\"2x + 3x\", \"5a + 2b - 3a + b\", \"4x + 2 - x + 5\"]\n\n  return (\n    <div className=\"simplifier-page\">\n      <h1>Expression Simplifier</h1>\n      <p className=\"subtitle\">Combine like terms and simplify expressions</p>\n\n      <div className=\"simplifier-container\">\n        <div className=\"input-section\">\n          <label>Enter an expression:</label>\n          <input\n            type=\"text\"\n            value={expression}\n            onChange={(e) => setExpression(e.target.value)}\n            placeholder=\"e.g., 2x + 3x + 5\"\n            onKeyPress={(e) => e.key === \"Enter\" && handleSimplify()}\n          />\n          <button onClick={handleSimplify} disabled={loading} className=\"simplify-btn\">\n            {loading ? \"Simplifying...\" : \"Simplify\"}\n          </button>\n\n          <div className=\"examples\">\n            <p>Examples:</p>\n            {examples.map((ex, idx) => (\n              <button key={idx} className=\"example-btn\" onClick={() => setExpression(ex)}>\n                {ex}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {result && (\n          <div className=\"result-section\">\n            <div className=\"result-box\">\n              <p className=\"label\">Original:</p>\n              <p className=\"expression\">{result.original}</p>\n            </div>\n            <div className=\"arrow\">â†’</div>\n            <div className=\"result-box\">\n              <p className=\"label\">Simplified:</p>\n              <p className=\"expression simplified\">{result.simplified}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default SimplifierPage\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,SAASC,cAAcA,CAAA,EAAG;EAAAV,EAAA;EACxB,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,EAAE;MACtBJ,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEAE,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,IAAI,CAAC;IAEf,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,GAAGhB,OAAO,eAAe,EAAE;QAAEK;MAAW,CAAC,CAAC;MAC5E,IAAIU,QAAQ,CAACE,IAAI,CAACR,KAAK,EAAE;QACvBC,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAACR,KAAK,CAAC;MAC/B,CAAC,MAAM;QACLD,SAAS,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZR,QAAQ,CAAC,yEAAyE,CAAC;IACrF,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMO,QAAQ,GAAG,CAAC,SAAS,EAAE,kBAAkB,EAAE,gBAAgB,CAAC;EAElE,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtB,OAAA;MAAAsB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BzB,OAAA;MAAGqB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAA2C;MAAAC,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEvEzB,OAAA;MAAKqB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCtB,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtB,OAAA;UAAAsB,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnCzB,OAAA;UACE0B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAErB,UAAW;UAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CI,WAAW,EAAC,mBAAmB;UAC/BC,UAAU,EAAGH,CAAC,IAAKA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAInB,cAAc,CAAC;QAAE;UAAAS,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACFzB,OAAA;UAAQkC,OAAO,EAAEpB,cAAe;UAACqB,QAAQ,EAAEvB,OAAQ;UAACS,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzEV,OAAO,GAAG,gBAAgB,GAAG;QAAU;UAAAW,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eAETzB,OAAA;UAAKqB,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBtB,OAAA;YAAAsB,QAAA,EAAG;UAAS;YAAAC,QAAA,EAAA7B,YAAA;YAAA8B,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACfL,QAAQ,CAACgB,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,kBACpBtC,OAAA;YAAkBqB,SAAS,EAAC,aAAa;YAACa,OAAO,EAAEA,CAAA,KAAM3B,aAAa,CAAC8B,EAAE,CAAE;YAAAf,QAAA,EACxEe;UAAE,GADQC,GAAG;YAAAf,QAAA,EAAA7B,YAAA;YAAA8B,UAAA;YAAAC,YAAA;UAAA,OAER,CACT,CAAC;QAAA;UAAAF,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAF,QAAA,EAAA7B,YAAA;QAAA8B,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELf,KAAK,iBAAIV,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEZ;MAAK;QAAAa,QAAA,EAAA7B,YAAA;QAAA8B,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAErDjB,MAAM,iBACLR,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BtB,OAAA;UAAKqB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBtB,OAAA;YAAGqB,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAA7B,YAAA;YAAA8B,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAClCzB,OAAA;YAAGqB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEd,MAAM,CAAC+B;UAAQ;YAAAhB,QAAA,EAAA7B,YAAA;YAAA8B,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAF,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACNzB,OAAA;UAAKqB,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9BzB,OAAA;UAAKqB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBtB,OAAA;YAAGqB,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAA7B,YAAA;YAAA8B,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACpCzB,OAAA;YAAGqB,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAEd,MAAM,CAACgC;UAAU;YAAAjB,QAAA,EAAA7B,YAAA;YAAA8B,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAF,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC;MAAA;QAAAF,QAAA,EAAA7B,YAAA;QAAA8B,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAF,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAF,QAAA,EAAA7B,YAAA;IAAA8B,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA/EQU,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAiFvB,eAAeA,cAAc;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}